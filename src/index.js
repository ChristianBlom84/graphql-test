const { GraphQLServer } = require('graphql-yoga');
const { prisma } = require('./generated/prisma-client');

let posts = [
	{
		id: 'post-0',
		title: 'Autogenerated post',
		content: 'Generated post content'
	}
];

// 2 resolvers
const resolvers = {
	Query: {
		info: () => `Hello and welcome to the API v0.0.1!`,
		posts: (root, args, context, info) => {
			return context.prisma.posts();
		},
		post: (root, args, context, info) => {
			return context.prisma.post({
				id: args.id
			});
		}
	},
	Post: {
		id: (parent) => parent.id,
		title: (parent) => parent.title,
		content: (parent) => parent.content
	},
	Mutation: {
		createPost: (root, args, context) => {
			return context.prisma.createPost({
				title: args.title,
				content: args.content
			});
		},
		updatePost: (root, args, context) => {
			return context.prisma.updatePost({
				data: {
					title: args.title,
					content: args.content
				},
				where: {
					id: args.id
				}
			});
		},
		deletePost: (root, args, context) => {
			return context.prisma.deletePost({
				id: args.id
			});
		}
	}
};

// 3 server
const server = new GraphQLServer({
	typeDefs: './blog-schema.graphql',
	resolvers,
	context: { prisma }
});

server.start(() => console.log(`Server started at http://localhost:4000`));
